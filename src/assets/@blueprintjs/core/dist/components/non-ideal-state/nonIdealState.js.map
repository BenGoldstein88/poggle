{"version":3,"sources":["../src/components/non-ideal-state/nonIdealState.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;;;;AAEH,IAAY,UAAU,WAAM,YAAY,CAAC,CAAA;AACzC,IAAY,UAAU,WAAM,uBAAuB,CAAC,CAAA;AACpD,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,IAAY,OAAO,WAAM,sBAAsB,CAAC,CAAA;AA0BhD;IAAmC,iCAAwC;IAA3E;QAAmC,8BAAwC;IAsD3E,CAAC;IArDU,8BAAM,GAAb;QACI,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE;YACrE,IAAI,CAAC,iBAAiB,EAAG;YACzB,IAAI,CAAC,gBAAgB,EAAG;YACxB,IAAI,CAAC,sBAAsB,EAAG;YAC9B,IAAI,CAAC,iBAAiB,EAAG,CACxB,CACT,CAAC;IACN,CAAC;IAEO,yCAAiB,GAAzB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAE,OAAO,CAAC,sBAAuB,GAAE,IAAI,CAAC,KAAK,CAAC,MAAO,CAAM,CAAC;IACrF,CAAC;IAEO,8CAAsB,GAA9B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,qBAAC,GAAG,IAAC,SAAS,EAAE,OAAO,CAAC,2BAA4B,GAAE,IAAI,CAAC,KAAK,CAAC,WAAY,CAAM,CAAC;IAC/F,CAAC;IAEO,wCAAgB,GAAxB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,qBAAC,EAAE,IAAC,SAAS,EAAE,OAAO,CAAC,qBAAsB,GAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAK,CAAC;IACjF,CAAC;IAEO,yCAAiB,GAAzB;QACY,8BAAM,CAAgB;QAC9B,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,sBAAsB,EAAE,OAAO,CAAC,oBAAoB,CAAE;gBACrF,qBAAC,IAAI,IAAC,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAE,EAAE;aAClE,CACT,CAAC;QACN,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,SAAS,EAAE,OAAO,CAAC,sBAAuB,GAC1C,MAAO,CACN,CACT,CAAC;QACN,CAAC;IACL,CAAC;IAtDL;QAAC,UAAU;qBAAA;IAuDX,oBAAC;AAAD,CAtDA,AAsDC,CAtDkC,KAAK,CAAC,SAAS,GAsDjD;AAtDY,qBAAa,gBAsDzB,CAAA;AAEY,4BAAoB,GAAG,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC","file":"components/non-ideal-state/nonIdealState.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport { IProps } from \"../../common/props\";\n\nexport interface INonIdealStateProps extends IProps {\n    /*\n     * An action the user can take to correct the non-ideal state.\n     */\n    action?: JSX.Element;\n\n    /**\n     * A longer description of the current non-ideal state.\n     */\n    description?: string | JSX.Element;\n\n    /**\n     * The title of the current non-ideal state.\n     */\n    title?: string;\n\n    /**\n     * A name of a Blueprint icon to display or a JSX Element (such as `<Spinner/>`).\n     */\n    visual?: string | JSX.Element;\n}\n\n@PureRender\nexport class NonIdealState extends React.Component<INonIdealStateProps, {}> {\n    public render() {\n        return (\n            <div className={classNames(Classes.NON_IDEAL_STATE, this.props.className)}>\n                {this.maybeRenderVisual()}\n                {this.maybeRenderTitle()}\n                {this.maybeRenderDescription()}\n                {this.maybeRenderAction()}\n            </div>\n        );\n    }\n\n    private maybeRenderAction() {\n        if (this.props.action == null) {\n            return undefined;\n        }\n\n        return <div className={Classes.NON_IDEAL_STATE_ACTION}>{this.props.action}</div>;\n    }\n\n    private maybeRenderDescription() {\n        if (this.props.description == null) {\n            return undefined;\n        }\n\n        return <div className={Classes.NON_IDEAL_STATE_DESCRIPTION}>{this.props.description}</div>;\n    }\n\n    private maybeRenderTitle() {\n        if (this.props.title == null) {\n            return undefined;\n        }\n\n        return <h4 className={Classes.NON_IDEAL_STATE_TITLE}>{this.props.title}</h4>;\n    }\n\n    private maybeRenderVisual() {\n        const { visual } = this.props;\n        if (visual == null) {\n            return undefined;\n        } else if (typeof visual === \"string\") {\n            return (\n                <div className={classNames(Classes.NON_IDEAL_STATE_VISUAL, Classes.NON_IDEAL_STATE_ICON)}>\n                    <span className={classNames(\"pt-icon\", Classes.iconClass(visual))}/>\n                </div>\n            );\n        } else {\n            return (\n                <div className={Classes.NON_IDEAL_STATE_VISUAL}>\n                    {visual}\n                </div>\n            );\n        }\n    }\n}\n\nexport const NonIdealStateFactory = React.createFactory(NonIdealState);\n"]}