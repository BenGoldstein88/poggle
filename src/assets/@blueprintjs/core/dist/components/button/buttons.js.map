{"version":3,"sources":["../src/components/button/buttons.tsx"],"names":[],"mappings":"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","file":"components/button/buttons.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\n// HACKHACK: these components should go in separate files\n// tslint:disable max-classes-per-file\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport { removeNonHTMLProps } from \"../../common/props\";\nimport { Spinner } from \"../spinner/spinner\";\nimport { AbstractButton, IButtonProps } from \"./abstractButton\";\n\nexport class Button extends AbstractButton<HTMLButtonElement> {\n    public static displayName = \"Blueprint.Button\";\n\n    public render() {\n        const { children, loading, onClick, rightIconName, text } = this.props;\n        const disabled = isButtonDisabled(this.props);\n\n        return (\n            <button\n                type=\"button\"\n                {...removeNonHTMLProps(this.props)}\n                className={getButtonClasses(this.props, this.state.isActive)}\n                onClick={disabled ? undefined : onClick}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp}\n                ref={this.refHandlers.button}\n            >\n                {maybeRenderSpinner(loading)}\n                {maybeRenderText(text)}\n                {children}\n                {maybeRenderRightIcon(rightIconName)}\n            </button>\n        );\n    }\n}\n\nexport const ButtonFactory = React.createFactory(Button);\n\nexport class AnchorButton extends AbstractButton<HTMLButtonElement> {\n    public static displayName = \"Blueprint.AnchorButton\";\n\n    public render() {\n        const { children, href, onClick, loading, rightIconName, tabIndex = 0, text } = this.props;\n        const disabled = isButtonDisabled(this.props);\n\n        return (\n            <a\n                role=\"button\"\n                {...removeNonHTMLProps(this.props)}\n                className={getButtonClasses(this.props, this.state.isActive)}\n                href={disabled ? undefined : href}\n                onClick={disabled ? undefined : onClick}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp}\n                ref={this.refHandlers.button}\n                tabIndex={disabled ? undefined : tabIndex}\n            >\n                {maybeRenderSpinner(loading)}\n                {maybeRenderText(text)}\n                {children}\n                {maybeRenderRightIcon(rightIconName)}\n            </a>\n        );\n    }\n}\n\nexport const AnchorButtonFactory = React.createFactory(AnchorButton);\n\nfunction getButtonClasses(props: IButtonProps, isActive = false) {\n    return classNames(\n        Classes.BUTTON, {\n            [Classes.ACTIVE]: isActive,\n            [Classes.DISABLED]: isButtonDisabled(props),\n            [Classes.LOADING]: props.loading,\n        },\n        Classes.iconClass(props.iconName),\n        Classes.intentClass(props.intent),\n        props.className,\n    );\n}\n\nfunction isButtonDisabled(props: IButtonProps) {\n    return props.disabled || props.loading;\n}\n\nfunction maybeRenderSpinner(loading: boolean) {\n    return loading\n      ? <Spinner className=\"pt-small pt-button-spinner\" />\n      : undefined;\n}\n\nfunction maybeRenderText(text?: string) {\n    return text\n      ? <span>{text}</span>\n      : undefined;\n}\n\nfunction maybeRenderRightIcon(iconName: string) {\n    if (iconName == null) {\n        return undefined;\n    } else {\n        return <span className={classNames(Classes.ICON_STANDARD, Classes.iconClass(iconName), Classes.ALIGN_RIGHT)} />;\n    }\n}\n"]}