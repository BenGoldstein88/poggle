{"version":3,"sources":["../src/components/progress/progressBar.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;;;;;;;AAEH,IAAY,UAAU,WAAM,YAAY,CAAC,CAAA;AACzC,IAAY,UAAU,WAAM,uBAAuB,CAAC,CAAA;AACpD,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,IAAY,OAAO,WAAM,sBAAsB,CAAC,CAAA;AAEhD,sBAAsB,oBAAoB,CAAC,CAAA;AAY3C;IAAiC,+BAAsC;IAAvE;QAAiC,8BAAsC;IAevE,CAAC;IAZU,4BAAM,GAAb;QACI,IAAA,eAA+C,EAAvC,wBAAS,EAAE,kBAAM,EAAE,gBAAK,CAAgB;QAChD,IAAM,OAAO,GAAG,UAAU,CAAC,iBAAiB,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,CAAC;QACtF,+DAA+D;QAC/D,IAAM,KAAK,GAAG,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,aAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAEtE,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,SAAS,EAAE,OAAQ;YACpB,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,EAAC,KAAK,EAAE,EAAE,YAAK,EAAG,EAAG;SACrD,CACT,CAAC;IACN,CAAC;IAba,uBAAW,GAAG,uBAAuB,CAAC;IAFxD;QAAC,UAAU;mBAAA;IAgBX,kBAAC;AAAD,CAfA,AAeC,CAfgC,KAAK,CAAC,SAAS,GAe/C;AAfY,mBAAW,cAevB,CAAA;AAEY,0BAAkB,GAAG,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC","file":"components/progress/progressBar.js","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as PureRender from \"pure-render-decorator\";\nimport * as React from \"react\";\n\nimport * as Classes from \"../../common/classes\";\nimport { IIntentProps, IProps } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nexport interface IProgressBarProps extends IProps, IIntentProps {\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1, respectively.\n     * Omitting this prop will result in an \"indeterminate\" progress meter that fills the entire bar.\n     */\n    value?: number;\n}\n\n@PureRender\nexport class ProgressBar extends React.Component<IProgressBarProps, {}> {\n    public static displayName = \"Blueprint.ProgressBar\";\n\n    public render() {\n        const { className, intent, value } = this.props;\n        const classes = classNames(\"pt-progress-bar\", Classes.intentClass(intent), className);\n        // don't set width if value is null (rely on default CSS value)\n        const width = (value == null ? null : 100 * clamp(value, 0, 1) + \"%\");\n\n        return (\n            <div className={classes}>\n                <div className=\"pt-progress-meter\" style={{ width }} />\n            </div>\n        );\n    }\n}\n\nexport const ProgressBarFactory = React.createFactory(ProgressBar);\n"]}