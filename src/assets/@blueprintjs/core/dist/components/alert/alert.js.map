{"version":3,"sources":["../src/components/alert/alert.tsx"],"names":[],"mappings":"AAAA;;;;;GAKG;;;;;;;AAEH,IAAY,UAAU,WAAM,YAAY,CAAC,CAAA;AACzC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,uBAA2D,cAAc,CAAC,CAAA;AAC1E,IAAY,MAAM,WAAM,qBAAqB,CAAC,CAAA;AAC9C,wBAAuB,mBAAmB,CAAC,CAAA;AAC3C,uBAAuB,kBAAkB,CAAC,CAAA;AA4C1C;IAA2B,yBAAkC;IAA7D;QAA2B,8BAAkC;IAiD7D,CAAC;IAxCU,sBAAM,GAAb;QACI,IAAA,eAA+F,EAAvF,sBAAQ,EAAE,wBAAS,EAAE,kBAAM,EAAE,kBAAM,EAAE,wCAAiB,EAAE,wBAAS,EAAE,gBAAK,CAAgB;QAChG,MAAM,CAAC,CACH,oBAAC,eAAM,GAAC,SAAS,EAAE,UAAU,CAAC,gBAAO,CAAC,KAAK,EAAE,SAAS,CAAE,EAAC,MAAM,EAAE,MAAO,EAAC,KAAK,EAAE,KAAM;YAClF,qBAAC,GAAG,IAAC,SAAS,EAAE,gBAAO,CAAC,UAAW;gBAC9B,IAAI,CAAC,eAAe,EAAG;gBACxB,qBAAC,GAAG,IAAC,SAAS,EAAE,gBAAO,CAAC,cAAe,GAClC,QAAS,CACR,CACJ;YACN,qBAAC,GAAG,IAAC,SAAS,EAAE,gBAAO,CAAC,YAAa;gBACjC,oBAAC,gBAAM,GAAC,MAAM,EAAE,MAAO,EAAC,IAAI,EAAE,iBAAkB,EAAC,OAAO,EAAE,SAAU,EAAG;gBACtE,IAAI,CAAC,0BAA0B,EAAG,CACjC,CACD,CACZ,CAAC;IACN,CAAC;IAES,6BAAa,GAAvB,UAAwB,KAAkB;QACtC,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI;YACxD,KAAK,CAAC,gBAAgB,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAK,CAAC,CAAC,CAAC;YAC5D,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IAEO,+BAAe,GAAvB;QACY,kCAAQ,CAAgB;QAChC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,IAAM,SAAS,GAAG,UAAU,CAAC,SAAS,EAAE,gBAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC,qBAAC,IAAI,IAAC,SAAS,EAAE,SAAU,EAAG,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEO,0CAA0B,GAAlC;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,oBAAC,gBAAM,GAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAiB,EAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS,EAAG,CAAC;QACvF,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IA/Ca,kBAAY,GAAgB;QACtC,iBAAiB,EAAE,IAAI;QACvB,MAAM,EAAE,KAAK;QACb,SAAS,EAAE,IAAI;KAClB,CAAC;IAEY,iBAAW,GAAG,iBAAiB,CAAC;IA0ClD,YAAC;AAAD,CAjDA,AAiDC,CAjD0B,0BAAiB,GAiD3C;AAjDY,aAAK,QAiDjB,CAAA","file":"components/alert/alert.js","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy\n * of the license at https://github.com/palantir/blueprint/blob/master/LICENSE\n * and https://github.com/palantir/blueprint/blob/master/PATENTS\n */\n\nimport * as classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractComponent, Classes, Intent, IProps } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { Button } from \"../button/buttons\";\nimport { Dialog } from \"../dialog/dialog\";\n\nexport interface IAlertProps extends IProps {\n    /**\n     * The text for the cancel button.\n     */\n    cancelButtonText?: string;\n\n    /**\n     * The text for the confirm (right-most) button.\n     * @default \"Ok\"\n     */\n    confirmButtonText?: string;\n\n    /** Name of optional icon to display next to alert message. */\n    iconName?: string;\n\n    /**\n     * The intent to be applied to the confirm (right-most) button.\n     */\n    intent?: Intent;\n\n    /**\n     * Toggles the visibility of the alert.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * CSS Styles to apply to the .pt-alert element.\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Handler invoked when the cancel button is clicked.\n     */\n    onCancel?(e: React.MouseEvent<HTMLButtonElement>): void;\n\n    /**\n     * Handler invoked when the confirm button is clicked.\n     */\n    onConfirm(e: React.MouseEvent<HTMLButtonElement>): void;\n }\n\nexport class Alert extends AbstractComponent<IAlertProps, {}> {\n    public static defaultProps: IAlertProps = {\n        confirmButtonText: \"Ok\",\n        isOpen: false,\n        onConfirm: null,\n    };\n\n    public static displayName = \"Blueprint.Alert\";\n\n    public render() {\n        const { children, className, intent, isOpen, confirmButtonText, onConfirm, style } = this.props;\n        return (\n            <Dialog className={classNames(Classes.ALERT, className)} isOpen={isOpen} style={style}>\n                <div className={Classes.ALERT_BODY}>\n                    {this.maybeRenderIcon()}\n                    <div className={Classes.ALERT_CONTENTS}>\n                        {children}\n                    </div>\n                </div>\n                <div className={Classes.ALERT_FOOTER}>\n                    <Button intent={intent} text={confirmButtonText} onClick={onConfirm} />\n                    {this.maybeRenderSecondaryAction()}\n                </div>\n            </Dialog>\n        );\n    }\n\n    protected validateProps(props: IAlertProps) {\n        if (props.cancelButtonText != null && props.onCancel == null ||\n            props.cancelButtonText == null && props.onCancel != null ) {\n            throw new Error(Errors.ALERT_CANCEL_PROPS);\n        }\n    }\n\n    private maybeRenderIcon() {\n        const { iconName } = this.props;\n        if (iconName != null) {\n            const iconClass = classNames(\"pt-icon\", Classes.iconClass(iconName));\n            return <span className={iconClass} />;\n        }\n        return undefined;\n    }\n\n    private maybeRenderSecondaryAction() {\n        if (this.props.cancelButtonText != null) {\n            return <Button text={this.props.cancelButtonText} onClick={this.props.onCancel} />;\n        }\n        return undefined;\n    }\n}\n"]}